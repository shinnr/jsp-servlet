프로젝트 명 하단에 존재하는 파일의 존재와 내용을 향후 충분히 활용할 수 있도록
숙지해주세요. 

1. 자바 프로그래머가 되어야하는 이유
2. 자바의 특징 및 메모리 영역의 정의
3. 자바주석
4. 자바API export
5. 미리 정의된 키워드의 종류와 사용자 
   정의 키워드의 작성 방법
6. 디버깅 방법
7. java 32bit runtime과 64bit runtime 환경 비교
8. 프로모션과 디모션
9. 기본 데이터 타입
10. Boxing과 unBoxing                       
11. 조건문 반복문                                                
12. 앨리어싱
13. 기본 데이타 타입 및 객체 값 비교
14. 랜덤값출력
15. enum
16. 접근지정자
17. 표기법
18. 변수와 상수의 선언 및 캐스팅
19. debug활용
20. 일반 블럭과 static 블럭
21. 싱글톤 패턴 구현 및 재귀 호출
22. 윤년여부
23. 실행 시스템 속성과 환경변수의 취득
24. 로딩과정과 인스턴스과정을 거친 클래스의 인스턴스화
25. 배열의 선언
26. 배열 복사(Shallow Copy / Deep Copy)
27. 차원배열
28. JCF(Java Collection Framework)
  - 컬렉션의 특징과 선언 및 활용
  - cache 구현
     (GeneralReference | WeakReference | SoftReference)
  - fail-fast test
  - 다중 스레드 환경에서의 컬렉션 객체 접근시의 컬렉션 동기화
      수동 동기화시 활용
    java.util.Collections의 활용
29. Thread                                                 
  - 스레드생성 및 라이프사이클
  - 스레드동기화
  - 스레드간 통신
30. 케익만들기
31. Timer
32. 스케줄러(Quartz활용)
33. Socket 통신
34. xml 파일 제어
35. XmlToJavaObjMapping(digester 라이브러리의 활용)
36. JAXB를 활용한 XML <-> 자바 마셜링/언마링
37. ToolProvider  문자열기반 자바코드의 동적 
    자바 파일작성 및 컴파일 및 실행
38. local javascript 파일 접근(함수 호출 등..),
     특정 서버(http접근)의 javascript 파일 접근
39. java reflection
40. URLClassLoader를통해 http or file 프로토콜을 
    이용한 jar 파일 접근 및 jar 파일내 특정 클래스
    동적 활용
41. iBatis 활용
    MyBatis 활용
42. iText 라이브러리를 이용한 PDF 작성
43. POI 라이브러리를 이용한 excel 작성
44. zip or unzip
45. BarCode or QRCode 생성 및 컨텐츠 취득 
46. 삭제 - 검색엔진 루신(Lucene)
47. 암호화/복호화(SHA1+SALT, RSA)
    JCA와 JCE 개념과 서드파티 BouncyCastle 설치 
48. 사용자 정의 어노테이션 
49. 사용자 정의 이벤트 퍼블리싱 및 리스너 구현 
50. AOP(Aspect Oriented Programming) 
    Aspectj의 활용
51. XML DTD의 작성과 활용
52. FTP 프로토콜을 이용한 파일 송,수신
    (프로퍼티 작성과 리딩)
53. Open Source AkkA를 활용한 병렬/분산처리
54. javaMail 메일 송,수신
55. apache commons email 메일 송신
56. EHCache
57. JMX(Java Management Extension)
    57.1 zero32.jmx.base
    57.2 zero32.jmx.notification
    57.3 zero32.jmx.cs.server.main
58. EasyBatch와 ElasticSearch
59. 디자인패턴
    (Singleton Pattern, State Pattern, Pacade Pattern,
     Strategy Pattern, Adapter Pattern, Factory Pattern,
     Observer Pattern, Decorator Pattern,
     Telescoping Constructor Pattern, 
     JavaBeans Pattern, Builder Pattern, Proxy Pattern)
60. 단위테스트
61. PMD, Stan4j
62. KAIST 형태소분석기
63. hwp 파일 대상 문자열 추출
============= plug-in ========================
1. Properties Editor
2. AJDT
3. Maven 
4. AmaterasERD
5. AmaterasUML
6. Scala-IDE
7. PMD
8. Stan4j

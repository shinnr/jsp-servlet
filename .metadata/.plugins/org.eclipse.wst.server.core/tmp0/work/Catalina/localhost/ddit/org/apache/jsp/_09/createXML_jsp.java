/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2020-06-15 05:55:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._09;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.vo.MemberVO;
import java.util.List;
import kr.or.ddit.member.service.IMemberServiceImpl;
import kr.or.ddit.member.service.IMemberService;

public final class createXML_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/xml; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   // xml 데이터 응답객체를 통해 브라우저에 전송.
   IMemberService service = IMemberServiceImpl.getInstance();
   List<MemberVO> memberList = service.memberList();
   
   out.println("<members>");
   for(MemberVO memberInfo : memberList) {
      out.println("<member id='" + memberInfo.getMem_id() + "'>");
         out.println("<mem_pass>" + memberInfo.getMem_pass() + "</mem_pass>");
         out.println("<mem_name>" + memberInfo.getMem_name() + "</mem_name>");
         out.println("<mem_regno1>" + memberInfo.getMem_regno1() + "</mem_regno1>");
         out.println("<mem_regno2>" + memberInfo.getMem_regno2() + "</mem_regno2>");
         out.println("<mem_bir>" + memberInfo.getMem_bir() + "</mem_bir>");
         out.println("<mem_zip>" + memberInfo.getMem_zip() + "</mem_zip>");
         out.println("<mem_add1>" + memberInfo.getMem_add1() + "</mem_add1>");
         out.println("<mem_add2>" + memberInfo.getMem_add2() + "</mem_add2>");
         out.println("<mem_hometel>" + memberInfo.getMem_hometel() + "</mem_hometel>");
         out.println("<mem_comtel>" + memberInfo.getMem_comtel() + "</mem_comtel>");
         out.println("<mem_hp>" + memberInfo.getMem_hp() + "</mem_hp>");
         out.println("<mem_mail>" + memberInfo.getMem_mail() + "</mem_mail>");
         out.println("<mem_job>" + memberInfo.getMem_job() + "</mem_job>");
         out.println("<mem_like>" + memberInfo.getMem_like() + "</mem_like>");
         out.println("<mem_memorial>" + memberInfo.getMem_memorial() + "</mem_memorial>");
         out.println("<mem_memorialday>" + memberInfo.getMem_memorialday() + "</mem_memorialday>");
         out.println("<mem_mileage>" + memberInfo.getMem_mileage() + "</mem_mileage>");
      out.println("</member>");
   }
   out.println("</members>");

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
